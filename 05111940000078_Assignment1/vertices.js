calcWhite = [
    -0.281,0.11,
    -0.347,-0.472,
    0.4,-0.455,

    -0.281,0.11,
    0.4,-0.455,
    0.253,0.116,
];

calcWhiteShad = [
    -0.347,-0.472,
    0.4,-0.455,
    -0.216,-0.5276,

    0.4,-0.455,
    -0.216,-0.5276,
    0.292,-0.5197,
];

calcBlack = [
    -0.237,0.4554,
    0.1557,0.462,
    -0.314,-0.382,

    0.1557,0.462,
    -0.314,-0.382,
    0.359,-0.358,
];

calcBlackShad = [
    -0.314,-0.379,
    -0.244,-0.454,
    0.269,-0.4364,

    0.3574,-0.3514,
    -0.314,-0.379,
    0.269,-0.4364
];

topScreen = [
    -0.0586,0.4426,
    -0.0617,0.4055,
    0.113,0.4443,

    -0.0617,0.4055,
    0.113,0.4443,
    0.1273,0.4102,
];

mainScreen = [
    -0.2045,0.3693,
    -0.2102,0.289,
    0.1305,0.3754,

    -0.2102,0.289,
    0.1305,0.3754,
    0.1552,0.2965,
];

del = [
    0.0606,-0.0207,
    0.1422,-0.0209,
    0.0664,-0.0741,

    0.1422,-0.0209,
    0.0664,-0.0741,
    0.1507,-0.0721,
  ];

ac = [
    0.1629,-0.0215,
    0.2424,-0.0214,
    0.1715,-0.0733,

    0.2424,-0.0214,
    0.1715,-0.0733,
    0.2569,-0.0713,
];

seven = [
    -0.2504,-0.029,
    -0.252,-0.0848,
    -0.1673,-0.0256,
    
    -0.252,-0.0848,
    -0.1673,-0.0256,
    -0.169,-0.0794,
];


eight = [
    -0.149,-0.0255,
    -0.1484,-0.0788,
    -0.0627,-0.0247,

    -0.1484,-0.0788,
    -0.0627,-0.0247,
    -0.0604,-0.078,
];

nine = [
    -0.0454,-0.0237,
    -0.041,-0.0747,
    0.039,-0.0206,

    -0.041,-0.0747,
    0.039,-0.0206,
    0.0455,-0.0743,
];

bigBox = [
    -0.258,-0.104,
    -0.272,-0.346,
    0.263,-0.092,
    
    -0.272,-0.346,
    0.263,-0.092,
    0.316,-0.329,
];

stripOneH = [
    -0.26,-0.165,
    -0.2627,-0.1847,
    0.277,-0.152,

    -0.2627,-0.1847,
    0.277,-0.152,
    0.2835,-0.172,
];

stripTwoH = [
    -0.27,-0.253,
    -0.2737,-0.28,
    0.2982,-0.237,
    
    -0.2737,-0.28,
    0.2982,-0.237,
    0.3036,-0.2596,
];

stripOneV = [
    -0.166,-0.0258,
    -0.1714,-0.347,
    -0.1492,-0.0252,

    -0.1714,-0.347,
    -0.1492,-0.0252,
    -0.151,-0.3484,
];

stripTwoV = [
    -0.0625,-0.022,
    -0.0458,-0.0215,
    -0.0472,-0.3437,
    
    -0.0458,-0.0215,
    -0.0472,-0.3437,
    -0.0293,-0.3432,
];

stripThreeV = [
    0.0474,-0.092,
    0.067,-0.0934,
    0.0757,-0.34,
    
    0.067,-0.0934,
    0.0757,-0.34,
    0.0937,-0.3398,
]


stripFourV = [
    0.156,-0.0914,
    0.174,-0.0913,
    0.1966,-0.3372,
    
    0.174,-0.0913,
    0.1966,-0.3372,
    0.2161,-0.3361,
];

//item2
whiteBase2 = [
    -0.347,0.14,
    -0.46,-0.186,
    0.336,0.158,

    -0.46,-0.186,
    0.336,0.158,
    0.46,-0.138,
]

blackBase2 = [
    -0.369,0.1547,
    -0.4692,-0.1447,
    0.338,0.154,

    -0.4692,-0.1447,
    0.338,0.154,
    0.4376,-0.148,
]

blackShade2 = [
    -0.4692,-0.1447,
    -0.423,-0.17,
    0.433,-0.135,

    -0.423,-0.17,
    0.433,-0.135,
    0.418,-0.162,
]

topScreen2 = [
    -0.357,0.1214,
    -0.306,0.1234,
    -0.3973,0.006,

    -0.306,0.1234,
    -0.3973,0.006,
    -0.343,0.0055
]

mainScreen2 = [
    -0.2654,0.127,
    -0.162,0.1276,
    -0.333,-0.117,

    -0.162,0.1276,
    -0.333,-0.117,
    -0.1924,-0.1207,
];

sideShade2 = [
    0.0795,-0.134,
    0.46,-0.133,
    -0.01,-0.17,

    0.46,-0.133,
    -0.01,-0.17,
    0.433,-0.179
];

bigBox2 = [
    0.1408,0.128,
    0.3304,0.128,
    0.1735,-0.120,

    0.3304,0.128,
    0.1735,-0.120,
    0.4146,-0.120,
];

blueBox2 = [
    0.1408,0.128,
    0.177,0.128,
    0.149,0.056,

    0.177,0.128,
    0.149,0.059,
    0.19,0.058,
];

sep1H2 = [
    0.1448, 0.1071,
    0.342,0.106,
    0.146,0.102,

    0.342,0.106,
    0.146,0.102,
    0.3446,0.1025
];

sep2H2 = [
    0.1498,0.0565,
    0.3597,0.0566,
    0.15,0.0508,

    0.3597,0.0566,
    0.15,0.0508,
    0.3622,0.0508,
];

sep3H2 = [
    0.1561,0.0016,
    0.3787,-0.0007,
    0.1564,-0.006,

    0.3787,-0.0007,
    0.1564,-0.006,
    0.3816,-0.0077,
];

sep4H2 = [
    0.162,-0.0605,
    0.3955,-0.0616,
    0.1648,-0.0696,

    0.3955,-0.0616,
    0.1648,-0.0696,
    0.399,-0.0686,
];

sep1V2 = [
    0.1744,0.1487,
    0.1883,0.149,
    0.22,-0.13,
    
    0.1883,0.149,
    0.22,-0.13,
    0.2376,-0.131
];

sep2V2 = [
    0.2266,0.1495,
    0.2423,0.1493,
    0.2878,-0.1318,

    0.2423,0.1493,
    0.2878,-0.1318,
    0.3067,-0.1307
];

sep3V2 = [
    0.2804,0.149,
    0.2934,0.149,
    0.3525,-0.13,

    0.2934,0.149,
    0.3525,-0.13,
    0.3715,-0.1294,
];

  let color = [];
  let len = 6;

  //item 1
  for (let i = 0; i < len; i++) {
    let rgbO = [217/255, 217/255, 217/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [140/255, 140/255, 140/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [37/255, 37/255, 37/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [75/255, 75/255, 75/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [75/255, 75/255, 75/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [63/255, 36/255, 214/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [63/255, 36/255, 214/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [217/255,217/255, 217/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [217/255, 217/255, 217/255, 1];
    color = color.concat(rgbO);
  }
  //11
  for (let i = 0; i < len; i++) {
    let rgbO = [217/255,217/255, 217/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [217/255,217/255, 217/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }

//item 2
  for (let i = 0; i < len; i++) {
    let rgbO = [188/255, 188/255, 188/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [37/255, 37/255, 37/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [75/255, 75/255, 75/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [75/255, 75/255, 75/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [217/255, 217/255, 217/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [217/255, 217/255, 217/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [63/255, 36/255, 214/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
  for (let i = 0; i < len; i++) {
    let rgbO = [45/255, 45/255, 45/255, 1];
    color = color.concat(rgbO);
  }
